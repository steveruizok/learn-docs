{"data":{"mdx":{"code":{"body":"function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar layoutProps = {};\n\nvar MDXContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MDXContent, _React$Component);\n\n  function MDXContent(props) {\n    var _this;\n\n    _classCallCheck(this, MDXContent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MDXContent).call(this, props));\n    _this.layout = null;\n    return _this;\n  }\n\n  _createClass(MDXContent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          components = _this$props.components,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n      return React.createElement(MDXTag, {\n        name: \"wrapper\",\n        components: components\n      }, React.createElement(MDXTag, {\n        name: \"p\",\n        components: components\n      }, \"This is an example of how you can build your site around Markdown files.\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components\n      }, \"Images referenced in Markdown are copied to the generated site, like these kittens:\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components\n      }, React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"p\",\n        props: {\n          \"className\": \"gatsby-resp-image-link\",\n          \"href\": \"/static/d49ad52d23565c90cedcf94cbed94ce0/97fc7/kittens.jpg\",\n          \"style\": {\n            \"display\": \"block\"\n          },\n          \"target\": \"_blank\",\n          \"rel\": [\"noopener\"]\n        }\n      }, \"\\n    \", React.createElement(MDXTag, {\n        name: \"span\",\n        components: components,\n        parentName: \"a\",\n        props: {\n          \"className\": \"gatsby-resp-image-wrapper\",\n          \"style\": {\n            \"position\": \"relative\",\n            \"display\": \"block\",\n            \"marginLeft\": \"auto\",\n            \"marginRight\": \"auto\",\n            \"maxWidth\": \"737px\"\n          }\n        }\n      }, \"\\n    \", React.createElement(MDXTag, {\n        name: \"span\",\n        components: components,\n        parentName: \"span\",\n        props: {\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"75%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0px\",\n            \"left\": \"0px\",\n            \"backgroundSize\": \"cover\",\n            \"display\": \"block\"\n          }\n        }\n      }), \"\\n    \", React.createElement(MDXTag, {\n        name: \"img\",\n        components: components,\n        parentName: \"span\",\n        props: {\n          \"className\": \"gatsby-resp-image-image\",\n          \"style\": {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"margin\": \"0px\",\n            \"verticalAlign\": \"middle\",\n            \"position\": \"absolute\",\n            \"top\": \"0px\",\n            \"left\": \"0px\",\n            \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n          },\n          \"alt\": \"Kittens\",\n          \"title\": \"\",\n          \"src\": \"/static/d49ad52d23565c90cedcf94cbed94ce0/97fc7/kittens.jpg\",\n          \"srcSet\": [\"/static/d49ad52d23565c90cedcf94cbed94ce0/e9684/kittens.jpg 300w\", \"/static/d49ad52d23565c90cedcf94cbed94ce0/74acb/kittens.jpg 600w\", \"/static/d49ad52d23565c90cedcf94cbed94ce0/97fc7/kittens.jpg 1024w\"],\n          \"sizes\": \"(max-width: 737px) 100vw, 737px\"\n        }\n      }), \"\\n  \"), \"\\n  \")), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components\n      }, \"Finally, here\\u2019s some sample code with beautiful syntax highlighting thanks to PrismJS:\"), React.createElement(MDXTag, {\n        name: \"div\",\n        components: components,\n        props: {\n          \"className\": \"gatsby-highlight\",\n          \"data-language\": \"typescript\"\n        }\n      }, React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        parentName: \"div\",\n        props: {\n          \"className\": \"language-typescript\"\n        }\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-typescript\"\n        }\n      }, React.createElement(MDXTag, {\n        name: \"span\",\n        components: components,\n        parentName: \"code\",\n        props: {\n          \"className\": \"token keyword\"\n        }\n      }, \"function\"), \" \", React.createElement(MDXTag, {\n        name: \"span\",\n        components: components,\n        parentName: \"code\",\n        props: {\n          \"className\": \"token function\"\n        }\n      }, \"greeting\"), React.createElement(MDXTag, {\n        name: \"span\",\n        components: components,\n        parentName: \"code\",\n        props: {\n          \"className\": \"token punctuation\"\n        }\n      }, \"(\"), \"name\", React.createElement(MDXTag, {\n        name: \"span\",\n        components: components,\n        parentName: \"code\",\n        props: {\n          \"className\": \"token punctuation\"\n        }\n      }, \":\"), \" \", React.createElement(MDXTag, {\n        name: \"span\",\n        components: components,\n        parentName: \"code\",\n        props: {\n          \"className\": \"token builtin\"\n        }\n      }, \"string\"), React.createElement(MDXTag, {\n        name: \"span\",\n        components: components,\n        parentName: \"code\",\n        props: {\n          \"className\": \"token punctuation\"\n        }\n      }, \")\"), React.createElement(MDXTag, {\n        name: \"span\",\n        components: components,\n        parentName: \"code\",\n        props: {\n          \"className\": \"token punctuation\"\n        }\n      }, \":\"), \" \", React.createElement(MDXTag, {\n        name: \"span\",\n        components: components,\n        parentName: \"code\",\n        props: {\n          \"className\": \"token builtin\"\n        }\n      }, \"string\"), \" \", React.createElement(MDXTag, {\n        name: \"span\",\n        components: components,\n        parentName: \"code\",\n        props: {\n          \"className\": \"token punctuation\"\n        }\n      }, \"{\"), \"\\n  \", React.createElement(MDXTag, {\n        name: \"span\",\n        components: components,\n        parentName: \"code\",\n        props: {\n          \"className\": \"token keyword\"\n        }\n      }, \"return\"), \" \", React.createElement(MDXTag, {\n        name: \"span\",\n        components: components,\n        parentName: \"code\",\n        props: {\n          \"className\": \"token string\"\n        }\n      }, \"'Hello, '\"), \" \", React.createElement(MDXTag, {\n        name: \"span\",\n        components: components,\n        parentName: \"code\",\n        props: {\n          \"className\": \"token operator\"\n        }\n      }, \"+\"), \" name \", React.createElement(MDXTag, {\n        name: \"span\",\n        components: components,\n        parentName: \"code\",\n        props: {\n          \"className\": \"token operator\"\n        }\n      }, \"+\"), \" \", React.createElement(MDXTag, {\n        name: \"span\",\n        components: components,\n        parentName: \"code\",\n        props: {\n          \"className\": \"token string\"\n        }\n      }, \"'!'\"), \"\\n\", React.createElement(MDXTag, {\n        name: \"span\",\n        components: components,\n        parentName: \"code\",\n        props: {\n          \"className\": \"token punctuation\"\n        }\n      }, \"}\"), \"\\n\\n\", React.createElement(MDXTag, {\n        name: \"span\",\n        components: components,\n        parentName: \"code\",\n        props: {\n          \"className\": \"token builtin\"\n        }\n      }, \"console\"), React.createElement(MDXTag, {\n        name: \"span\",\n        components: components,\n        parentName: \"code\",\n        props: {\n          \"className\": \"token punctuation\"\n        }\n      }, \".\"), React.createElement(MDXTag, {\n        name: \"span\",\n        components: components,\n        parentName: \"code\",\n        props: {\n          \"className\": \"token function\"\n        }\n      }, \"log\"), React.createElement(MDXTag, {\n        name: \"span\",\n        components: components,\n        parentName: \"code\",\n        props: {\n          \"className\": \"token punctuation\"\n        }\n      }, \"(\"), React.createElement(MDXTag, {\n        name: \"span\",\n        components: components,\n        parentName: \"code\",\n        props: {\n          \"className\": \"token function\"\n        }\n      }, \"greeting\"), React.createElement(MDXTag, {\n        name: \"span\",\n        components: components,\n        parentName: \"code\",\n        props: {\n          \"className\": \"token punctuation\"\n        }\n      }, \"(\"), React.createElement(MDXTag, {\n        name: \"span\",\n        components: components,\n        parentName: \"code\",\n        props: {\n          \"className\": \"token string\"\n        }\n      }, \"'GatsbyJS'\"), React.createElement(MDXTag, {\n        name: \"span\",\n        components: components,\n        parentName: \"code\",\n        props: {\n          \"className\": \"token punctuation\"\n        }\n      }, \")\"), React.createElement(MDXTag, {\n        name: \"span\",\n        components: components,\n        parentName: \"code\",\n        props: {\n          \"className\": \"token punctuation\"\n        }\n      }, \")\")))), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components\n      }, \"Go back to the \", React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"p\",\n        props: {\n          \"href\": \"/all\"\n        }\n      }, \"content index\"), \".\"));\n    }\n  }]);\n\n  return MDXContent;\n}(React.Component);\n\nreturn MDXContent;\nMDXContent.isMDXComponent = true;"},"frontmatter":{"date":"January 7, 2018","path":"/content/kittens/","title":"Kittens"}}},"pageContext":{}}