{"version":3,"sources":["webpack:///./src/pages/tags.tsx","webpack:///./src/components/LunrSearch.tsx","webpack:///./src/components/Header.tsx","webpack:///./src/components/Sidebar.tsx","webpack:///./src/components/Layout.tsx"],"names":["TagsPage","props","allMdx","data","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","a","title","group","map","tag","key","fieldValue","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","kebabCase","totalCount","pageQuery","styles","wrapper","name","input","list","item","link","footer","hidden","search","query","_ref","window","__LUNR__","en","index","store","_ref2","ref","LunrSearch","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","state","results","isActive","handleSearch","event","target","value","setState","handleClickOutside","ev","element","ReactDOM","findDOMNode","assertThisInitialized_default","contains","inheritsLoose_default","_proto","prototype","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","limit","count","core_browser_esm","css","type","onChange","slice","result","gatsby_browser_entry","path","Math","min","React","Component","style","container","TitleLink","styled_base_browser_esm","Link","Header","LunrSearch_LunrSearch","Sidebar","edges","_node$frontmatter","node","frontmatter","activeStyle","color","Layout","children","react_default","Fragment","Helmet","titleTemplate","site","siteMetadata","defaultTitle","meta","content","Header_Header","Sidebar_Sidebar","_4198557694"],"mappings":"uMAuCeA,UArBE,SAACC,GAAyB,IACjCC,EAAWD,EAAME,KAAjBD,OAER,OACEE,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAACG,EAAAC,EAAD,CAAQC,MAAM,SACdL,OAAAC,EAAA,EAAAD,CAAA,WACEA,OAAAC,EAAA,EAAAD,CAAA,kBACAA,OAAAC,EAAA,EAAAD,CAAA,UACGF,EAAOQ,MAAMC,IAAI,SAAAC,GAAG,OACnBR,OAAAC,EAAA,EAAAD,CAAA,MAAIS,IAAKD,EAAIE,YACXV,OAAAC,EAAA,EAAAD,CAACW,EAAA,KAAD,CAAMC,GAAE,SAAWC,oBAAUL,EAAIE,YAAzB,KAA0CF,EAAIE,YADxD,KAEGF,EAAIM,WAFP,WAaL,IAAMC,EAAS,oxUCpChBC,EAAS,CACbC,QAAO,CAAAC,KAAA,SAAAF,OAAA,4DAKPG,MAAK,CAAAD,KAAA,SAAAF,OAAA,+DAMLI,KAAI,CAAAF,KAAA,UAAAF,OAAA,+KAaJK,KAAI,CAAAH,KAAA,UAAAF,OAAA,2CAIJM,KAAI,CAAAJ,KAAA,SAAAF,OAAA,gDAKJO,OAAM,CAAAL,KAAA,SAAAF,OAAA,+EAONQ,OAAM,CAAAN,KAAA,SAAAF,OAAA,mFAUFS,EAAS,SAACC,GAA+C,IAAAC,EACpCC,OAAOC,UAAYD,OAAOC,SAASC,GAApDC,EADqDJ,EACrDI,MAAOC,EAD8CL,EAC9CK,MACf,OAAON,EAAQK,EAAMN,OAAOC,GAAOnB,IAAI,SAAA0B,GAAA,IAAGC,EAAHD,EAAGC,IAAH,OAAaF,EAAME,KAAQ,IAavDC,EAAb,SAAAC,GAAA,SAAAD,IAAA,QAAAE,EAAAC,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAN,EAAAD,EAAAQ,KAAAC,MAAAT,EAAA,CAAAU,MAAAC,OAAAN,KAAAK,MACkBE,MAAyB,CACvCtB,MAAO,GACPuB,QAAS,GACTC,UAAU,GAJdb,EAOWc,aAAe,SAACC,GACvB,IAAM1B,EAAQ0B,EAAMC,OAAOC,MACrBL,EAAUxB,EAAOC,GACvBW,EAAKkB,SAAS,iBAAO,CAAEN,UAASvB,QAAOwB,UAAU,MAVrDb,EAaWmB,mBAAqB,SAACC,GAC7B,IAAMC,EAAUC,IAASC,YAATC,IAAAxB,IACVa,IAAab,EAAKW,MAAMtB,SAAWgC,GAAWA,EAAQI,SAASL,EAAGJ,QACxEhB,EAAKkB,SAAS,iBAAO,CAAEL,eAhB3Bb,EAAA0B,IAAA5B,EAAAC,GAAA,IAAA4B,EAAA7B,EAAA8B,UAAA,OAAAD,EAmBEE,kBAAA,WACEC,SAASC,iBAAiB,QAAStB,KAAKU,oBAAoB,IApBhEQ,EAuBEK,qBAAA,WACEF,SAASG,oBAAoB,QAASxB,KAAKU,oBAAoB,IAxBnEQ,EA2BEO,OAAA,WAAS,IACCC,EAAU1B,KAAKjD,MAAf2E,MACFC,EAAQ3B,KAAKE,MAAMC,QAAQT,OAEjC,OACExC,OAAA0E,EAAA,EAAA1E,CAAA,OAAK2E,IAAK3D,EAAOC,SACfjB,OAAA0E,EAAA,EAAA1E,CAAA,aACEA,OAAA0E,EAAA,EAAA1E,CAAA,QAAM2E,IAAK3D,EAAOQ,QAAlB,UACAxB,OAAA0E,EAAA,EAAA1E,CAAA,SACE4E,KAAK,SACLD,IAAK3D,EAAOG,MACZmC,MAAOR,KAAKE,MAAMtB,MAClBmD,SAAU/B,KAAKK,gBAGlBL,KAAKE,MAAME,SACVlD,OAAA0E,EAAA,EAAA1E,CAAA,MAAI2E,IAAK3D,EAAOI,MACb0B,KAAKE,MAAMC,QAAQ6B,MAAM,EAAGN,GAAOjE,IAAI,SAACwE,EAAQhD,GAAT,OACtC/B,OAAA0E,EAAA,EAAA1E,CAAA,MAAIS,IAAKsB,EAAO4C,IAAK3D,EAAOK,MAC1BrB,OAAA0E,EAAA,EAAA1E,CAACgF,EAAA,KAAD,CAAML,IAAK3D,EAAOM,KAAMV,GAAImE,EAAOE,MAChCF,EAAO1E,UAIdL,OAAA0E,EAAA,EAAA1E,CAAA,MAAI2E,IAAK3D,EAAOO,QAAhB,WACWiD,EAAWU,KAAKC,IAAIX,EAAOC,GAAtB,MAAoC,KADpD,IAC2DA,EAAO,IACrD,IAAVA,EAAc,SAAW,UAF5B,MAKA,OAxDZtC,EAAA,CAAgCiD,IAAMC,WChEhCC,EAAQ,CACZC,UAAS,CAAArE,KAAA,UAAAF,OAAA,2DAKTC,QAAO,CAAAC,KAAA,SAAAF,OAAA,yJAUPX,MAAK,CAAAa,KAAA,UAAAF,OAAA,mCAMDwE,EAAYxF,OAAAyF,EAAA,EAAAzF,CAAO0F,OAAP,CAAArC,OAAA,aAAArD,CAAH,CAAAkB,KAAA,SAAAF,OAAA,kEAcF2E,EAAS,SAAAhE,GAAA,IAAGtB,EAAHsB,EAAGtB,MAAH,OACpBL,OAAA0E,EAAA,EAAA1E,CAAA,OAAK2E,IAAKW,EAAMC,WACdvF,OAAA0E,EAAA,EAAA1E,CAAA,OAAK2E,IAAKW,EAAMrE,SACdjB,OAAA0E,EAAA,EAAA1E,CAAA,MAAI2E,IAAKW,EAAMjF,OACbL,OAAA0E,EAAA,EAAA1E,CAACwF,EAAD,CAAW5E,GAAG,KAAKP,IAErBL,OAAA0E,EAAA,EAAA1E,CAAC4F,EAAD,CAAYpB,MAAO,QCzCnBpD,EAAI,CAAAF,KAAA,UAAAF,OAAA,sJAYJK,EAAOsD,cAEAkB,EAAU,SAAAlE,GAAA,IAAGmE,EAAHnE,EAAGmE,MAAH,OACrB9F,OAAA0E,EAAA,EAAA1E,CAAA,MAAI2E,IAAKvD,GACN0E,EAAMvF,IAAI,SAAA0B,GAAc,IAAA8D,EAAA9D,EAAX+D,KACiBC,YAArBhB,EADec,EACfd,KAAM5E,EADS0F,EACT1F,MACd,OACEL,OAAA0E,EAAA,EAAA1E,CAAA,MAAI2E,IAAKtD,EAAMZ,IAAKwE,GAClBjF,OAAA0E,EAAA,EAAA1E,CAACgF,EAAA,KAAD,CAAMkB,YAAa,CAAEC,MAAO,WAAavF,GAAIqE,GAC1C5E,wCCtBb,IAAMY,EAAO,CAAAC,KAAA,SAAAF,OAAA,uMAyCAoF,EAAS,SAAAzE,GAAA,IAAG0E,EAAH1E,EAAG0E,SAAH,OACpBrG,OAAA0E,EAAA,EAAA1E,CAACgF,EAAA,YAAD,CACEtD,MAAK,aA6BL6C,OAAQ,SAACxE,GACP,OACEC,OAAA0E,EAAA,EAAA1E,CAAAsG,EAAAlG,EAAAmG,SAAA,KACEvG,OAAA0E,EAAA,EAAA1E,CAACwG,EAAA,OAAD,CACEC,cAAa,QAAU1G,EAAK2G,KAAKC,aAAatG,MAC9CuG,aAAc7G,EAAK2G,KAAKC,aAAatG,MACrCwG,KAAM,CACJ,CACE3F,KAAM,cACN4F,QAAS,gDAEX,CACE5F,KAAM,WACN4F,QAAS,iDAIf9G,OAAA0E,EAAA,EAAA1E,CAAC+G,EAAD,CAAQ1G,MAAON,EAAK2G,KAAKC,aAAatG,QACtCL,OAAA0E,EAAA,EAAA1E,CAAA,OAAK2E,IAAK1D,GACRjB,OAAA0E,EAAA,EAAA1E,CAACgH,EAAD,CAASlB,MAAO/F,EAAKD,OAAOgG,QAC5B9F,OAAA0E,EAAA,EAAA1E,CAAA,WAAMqG,MAlDhBtG,KAAAkH","file":"component---src-pages-tags-tsx-0804f49e3becfb87da24.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport { kebabCase } from 'lodash'\nimport { Layout } from '../components/Layout'\n\ntype TagsPageProps = {\n  readonly data: {\n    readonly allMdx: AllMarkdown & {\n      readonly group: ReadonlyArray<{\n        readonly fieldValue: string\n        readonly totalCount: number\n      }>\n    }\n    readonly site: Site\n  }\n}\n\nconst TagsPage = (props: TagsPageProps) => {\n  const { allMdx } = props.data\n\n  return (\n    <Layout>\n      <Helmet title=\"Tags\" />\n      <div>\n        <h2>Tags</h2>\n        <ul>\n          {allMdx.group.map(tag => (\n            <li key={tag.fieldValue}>\n              <Link to={`/tags/${kebabCase(tag.fieldValue)}/`}>{tag.fieldValue}</Link> (\n              {tag.totalCount})\n            </li>\n          ))}\n        </ul>\n      </div>\n    </Layout>\n  )\n}\n\nexport default TagsPage\n\nexport const pageQuery = graphql`\n  {\n    allMdx(limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n","import React, { ChangeEvent } from 'react'\nimport ReactDOM from 'react-dom'\nimport { css } from '@emotion/core'\nimport { Link } from 'gatsby'\n\nconst styles = {\n  wrapper: css`\n    display: inline-block;\n    border-radius: 12px;\n    overflow: hidden;\n  `,\n  input: css`\n    padding: 0.25rem 1em;\n    width: 100%;\n    height: 40px;\n    font-size: 0.9em;\n  `,\n  list: css`\n    background-color: #fff;\n    border: 1px solid #ccc;\n    border-radius: 12px;\n    display: block;\n    list-style: none;\n    margin: 0;\n    padding: 1em;\n    position: absolute;\n    width: 16rem;\n    margin-top: 0.5em;\n    z-index: 2;\n  `,\n  item: css`\n    border-bottom: 1px dotted #ccc;\n    margin: 0;\n  `,\n  link: css`\n    display: block;\n    padding: 1em 0;\n    font-size: 0.9em;\n  `,\n  footer: css`\n    font-size: 0.75rem;\n    margin: 0;\n    padding: 1em;\n    padding-top: 1.5em;\n    text-align: center;\n  `,\n  hidden: css`\n    position: absolute;\n    left: -10000px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  `\n}\n\nconst search = (query: string): ReadonlyArray<SearchResult> => {\n  const { index, store } = window.__LUNR__ && window.__LUNR__.en\n  return query ? index.search(query).map(({ ref }) => store[ref]) : []\n}\n\ninterface LunrSearchProps {\n  readonly limit?: number\n}\n\ninterface LunrSearchState {\n  readonly query: string\n  readonly results: ReadonlyArray<SearchResult>\n  readonly isActive: boolean\n}\n\nexport class LunrSearch extends React.Component<LunrSearchProps, LunrSearchState> {\n  public readonly state: LunrSearchState = {\n    query: '',\n    results: [],\n    isActive: false\n  }\n\n  readonly handleSearch = (event: ChangeEvent<{ readonly value: string }>) => {\n    const query = event.target.value\n    const results = search(query)\n    this.setState(() => ({ results, query, isActive: true }))\n  }\n\n  readonly handleClickOutside = (ev: Event) => {\n    const element = ReactDOM.findDOMNode(this)\n    const isActive = !!this.state.query && !!element && element.contains(ev.target as Node)\n    this.setState(() => ({ isActive }))\n  }\n\n  componentDidMount() {\n    document.addEventListener('click', this.handleClickOutside, true)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClickOutside, true)\n  }\n\n  render() {\n    const { limit } = this.props\n    const count = this.state.results.length\n\n    return (\n      <div css={styles.wrapper}>\n        <label>\n          <span css={styles.hidden}>Search</span>\n          <input\n            type=\"search\"\n            css={styles.input}\n            value={this.state.query}\n            onChange={this.handleSearch}\n          />\n        </label>\n        {this.state.isActive ? (\n          <ul css={styles.list}>\n            {this.state.results.slice(0, limit).map((result, index) => (\n              <li key={index} css={styles.item}>\n                <Link css={styles.link} to={result.path}>\n                  {result.title}\n                </Link>\n              </li>\n            ))}\n            <li css={styles.footer}>\n              Showing {limit ? `${Math.min(limit, count)} of` : null} {count}{' '}\n              {count === 1 ? 'result' : 'results'}.\n            </li>\n          </ul>\n        ) : null}\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { css } from '@emotion/core'\n// @ts-ignore\nimport { Link } from 'gatsby'\nimport { LunrSearch } from './LunrSearch'\n\nconst style = {\n  container: css`\n    background: #0056fe;\n    color: #3c3b68;\n    margin-bottom: 1.45rem;\n  `,\n  wrapper: css`\n    display: grid;\n    grid-template-columns: auto 16rem;\n    grid-template-rows: auto;\n    align-items: center;\n    height: 80px;\n    padding: 0px 1.2em;\n    margin: 0 auto;\n    max-width: 960px;\n  `,\n  title: css`\n    margin: 0;\n    display: inline-block;\n  `\n}\n\nconst TitleLink = styled(Link)`\n  color: #fff;\n  text-decoration: none;\n\n  &:active,\n  &:hover {\n    color: #fff;\n  }\n`\n\ntype HeaderProps = {\n  readonly title: string\n}\n\nexport const Header = ({ title }: HeaderProps) => (\n  <div css={style.container}>\n    <div css={style.wrapper}>\n      <h3 css={style.title}>\n        <TitleLink to=\"/\">{title}</TitleLink>\n      </h3>\n      <LunrSearch limit={10} />\n    </div>\n  </div>\n)\n","import React from 'react'\nimport { css } from '@emotion/core'\nimport { Link } from 'gatsby'\n\ntype SidebarProps = {\n  readonly edges: Edges<Markdown>\n}\n\nconst list = css`\n  line-height: 1.8;\n  list-style: none;\n  padding: 0;\n  margin: 1rem 0 2rem;\n  font-family: 'Merriweather Sans', Arial, Helvetica, sans-serif;\n\n  & a {\n    text-decoration: none;\n  }\n`\n\nconst item = css``\n\nexport const Sidebar = ({ edges }: SidebarProps) => (\n  <ul css={list}>\n    {edges.map(({ node }) => {\n      const { path, title } = node.frontmatter\n      return (\n        <li css={item} key={path}>\n          <Link activeStyle={{ color: '#0056fe' }} to={path}>\n            {title}\n          </Link>\n        </li>\n      )\n    })}\n  </ul>\n)\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Helmet } from 'react-helmet'\nimport { css } from '@emotion/core'\nimport { Header } from './Header'\nimport { Sidebar } from './Sidebar'\n\nconst wrapper = css`\n  margin: 0 auto;\n  max-width: 1260px;\n  padding: 0 1.0875rem 1.45rem;\n  display: grid;\n  grid-auto-flow: row;\n  grid-template-columns: 200px 1fr;\n\n  & a {\n    color: #131315;\n  }\n\n  /* & tr {\n    display: grid;\n    grid-auto-flow: column;\n    grid-auto-columns: 20% 20% 50%;\n    text-align: left;\n  } */\n\n  & th {\n    width: fit-content;\n  }\n\n  & th::last-child {\n    width: auto;\n  }\n`\n\ntype LayoutProps = {\n  readonly children?: React.ReactNode | ReadonlyArray<React.ReactNode>\n}\n\ntype RenderData = {\n  readonly site: {\n    readonly siteMetadata: {\n      readonly title: string\n    }\n  }\n  allMdx: any\n}\n\nexport const Layout = ({ children }: LayoutProps) => (\n  <StaticQuery\n    query={graphql`\n      {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n        allMdx(sort: { order: ASC, fields: [frontmatter___title] }, limit: 2000) {\n          edges {\n            node {\n              id\n              parent {\n                ... on File {\n                  name\n                  sourceInstanceName\n                }\n              }\n              excerpt(pruneLength: 250)\n              frontmatter {\n                path\n                title\n                date(formatString: \"MMMM D, YYYY\")\n                tags\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data: RenderData) => {\n      return (\n        <>\n          <Helmet\n            titleTemplate={`%s - ${data.site.siteMetadata.title}`}\n            defaultTitle={data.site.siteMetadata.title}\n            meta={[\n              {\n                name: 'description',\n                content: 'Demo site for a Gatsby Starter in TypeScript'\n              },\n              {\n                name: 'keywords',\n                content: 'gatsby, gatsbyjs, sample, demo, typescript'\n              }\n            ]}\n          />\n          <Header title={data.site.siteMetadata.title} />\n          <div css={wrapper}>\n            <Sidebar edges={data.allMdx.edges} />\n            <div>{children}</div>\n          </div>\n        </>\n      )\n    }}\n  />\n)\n"],"sourceRoot":""}